name: Validate CloudFormation on PR
on:
  pull_request:
    paths:
      - 'cloudformation-cicd/**'

permissions:
  pull-requests: write
  contents: read

jobs:
  validate-cfn:
    runs-on: ubuntu-latest
    steps:
      # Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      # Validate the CloudFormation template to be valid
      - name: Validate CloudFormation templates
        run: |
          aws cloudformation validate-template --template-body file://cloudformation-cicd/s3-bucket.yaml

      # Deploy the CloudFormation stack
      - name: Deploy CloudFormation stack
        run: |
          stack_name="pr-test-stack-${{ github.event.pull_request.number }}"
          aws cloudformation create-stack \
            --stack-name $stack_name \
            --template-body file://cloudformation-cicd/s3-bucket.yaml \
            --parameters ParameterKey=Environment,ParameterValue=test

      # Comment on the PR
      - name: Comment on the PR
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prNumber = context.issue.number;
            const stack_name = `pr-test-stack-${prNumber}`;
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const commentBody = `CloudFormation test stack \`${stack_name}\` has been successfully created for this PR.`;
            await github.rest.issues.createComment({
              issue_number: prNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: commentBody
            });
  
  # Cleanup after PR merge
  # Delete the CloudFormation stack after the PR is closed
  cleanup-on-merge:
    runs-on: ubuntu-latest
    if: github.event.action == 'closed' && github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'
    steps:
      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      # Delete the CloudFormation stack
      - name: Delete CloudFormation stack
        run: |
          stack_name="pr-test-stack-${{ github.event.pull_request.number }}"
          aws cloudformation delete-stack --stack-name $stack_name